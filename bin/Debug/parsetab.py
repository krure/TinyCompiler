
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOL COMA COMENTARIOSBLOQUE COMENTARIOSLINEA DIFERENTE DIVIDE DO ELSE FALSE FI FLOAT FLOATNUMBER IDENTIFIER IF IGUAL IGUALIGUAL INT LLAVEABRE LLAVECIERRA LPAREN MAYOR MAYORIGUAL MENOR MENORIGUAL MINUS NOT NUMBER OR PLUS PROGRAM PUNTOCOMA READ RESERVADA RPAREN SEP THEN TIMES TRUE UNTIL WHILE WRITEprograma : PROGRAM LLAVEABRE lista_declaracion lista_sentencias LLAVECIERRA\n                    | PROGRAM LLAVEABRE LLAVECIERRA\n                    | PROGRAM LLAVEABRE lista_declaracion LLAVECIERRAlista_declaracion :  declaracion\n                                | declaracion lista_declaraciondeclaracion : tipo lista_id PUNTOCOMAdeclaracion : tipo lista_id errortipo : INT\n\t\t          | FLOAT\n\t\t\t\t  | BOOLlista_id : IDENTIFIER COMA IDENTIFIER\n                    | IDENTIFIERlista_sentencias :  sentencia\n                            | sentencia lista_sentenciassentencia : seleccion \n\t\t\t\t\t   | iteracion \n\t\t\t\t\t   | repeticion \n\t\t\t\t\t   | sent_read \n\t\t\t\t\t   | sent_write \n\t\t\t\t\t   | bloque \n\t\t\t\t\t   | asignacionseleccion : IF LPAREN b_expresion RPAREN THEN bloque \n\t\t             | IF LPAREN b_expresion RPAREN ELSE bloque FI\n\t\t             | IF LPAREN b_expresion RPAREN THEN bloque FIiteracion : WHILE LPAREN b_expresion RPAREN THEN bloquerepeticion : DO bloque UNTIL LPAREN b_expresion RPAREN PUNTOCOMAsent_read : READ IDENTIFIER PUNTOCOMAsent_write : WRITE b_expresion PUNTOCOMAbloque : LLAVEABRE lista_sentencias LLAVECIERRAasignacion : IDENTIFIER IGUAL b_expresion PUNTOCOMAb_expresion : b_term OR b_term\n                    | b_termb_term : not_factor AND not_factor\n                | not_factornot_factor : NOT b_factor\n\t\t                | b_factorb_factor :  LPAREN TRUE RPAREN\n\t\t               | LPAREN FALSE RPAREN   \n\t\t               | relacionrelacion : expresion rel_Op expresion\n\t\t            | expresionrel_Op : MENORIGUAL \n\t\t           | MENOR\n\t\t\t\t   | MAYOR\n\t\t\t\t   | MAYORIGUAL \n\t\t\t\t   | IGUALIGUAL \n\t\t\t\t   | DIFERENTE expresion : termino suma_Op termino\n                        | terminosuma_Op : PLUS \n\t\t           | MINUStermino : signoFactor multi_Op signoFactor\n                    | signoFactormulti_Op : TIMES \n\t\t            | DIVIDEsignoFactor : suma_Op factor\n\t\t               | factorfactor : LPAREN b_expresion RPAREN \n\t   \t\t\t   | NUMBER\n\t   \t\t\t   | FLOATNUMBER\n\t\t\t\t   | IDENTIFIER'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,5,13,32,],[0,-2,-3,-1,]),'LLAVEABRE':([2,4,6,11,14,15,16,17,18,19,20,21,24,28,56,57,59,63,65,89,98,99,100,102,104,106,107,108,],[3,11,-4,11,11,-15,-16,-17,-18,-19,-20,-21,11,-5,-6,-7,-29,-27,-28,-30,11,11,11,-22,-25,-24,-23,-26,]),'LLAVECIERRA':([3,4,6,12,14,15,16,17,18,19,20,21,28,31,33,56,57,59,63,65,89,102,104,106,107,108,],[5,13,-4,32,-13,-15,-16,-17,-18,-19,-20,-21,-5,59,-14,-6,-7,-29,-27,-28,-30,-22,-25,-24,-23,-26,]),'INT':([3,6,56,57,],[8,8,-6,-7,]),'FLOAT':([3,6,56,57,],[9,9,-6,-7,]),'BOOL':([3,6,56,57,],[10,10,-6,-7,]),'IF':([4,6,11,14,15,16,17,18,19,20,21,28,56,57,59,63,65,89,102,104,106,107,108,],[22,-4,22,22,-15,-16,-17,-18,-19,-20,-21,-5,-6,-7,-29,-27,-28,-30,-22,-25,-24,-23,-26,]),'WHILE':([4,6,11,14,15,16,17,18,19,20,21,28,56,57,59,63,65,89,102,104,106,107,108,],[23,-4,23,23,-15,-16,-17,-18,-19,-20,-21,-5,-6,-7,-29,-27,-28,-30,-22,-25,-24,-23,-26,]),'DO':([4,6,11,14,15,16,17,18,19,20,21,28,56,57,59,63,65,89,102,104,106,107,108,],[24,-4,24,24,-15,-16,-17,-18,-19,-20,-21,-5,-6,-7,-29,-27,-28,-30,-22,-25,-24,-23,-26,]),'READ':([4,6,11,14,15,16,17,18,19,20,21,28,56,57,59,63,65,89,102,104,106,107,108,],[25,-4,25,25,-15,-16,-17,-18,-19,-20,-21,-5,-6,-7,-29,-27,-28,-30,-22,-25,-24,-23,-26,]),'WRITE':([4,6,11,14,15,16,17,18,19,20,21,28,56,57,59,63,65,89,102,104,106,107,108,],[27,-4,27,27,-15,-16,-17,-18,-19,-20,-21,-5,-6,-7,-29,-27,-28,-30,-22,-25,-24,-23,-26,]),'IDENTIFIER':([4,6,7,8,9,10,11,14,15,16,17,18,19,20,21,25,27,28,34,35,38,42,44,48,51,52,56,57,58,59,63,65,66,67,72,73,74,75,76,77,78,79,81,82,83,84,88,89,102,104,106,107,108,],[26,-4,30,-8,-9,-10,26,26,-15,-16,-17,-18,-19,-20,-21,37,55,-5,55,55,55,55,55,55,-50,-51,-6,-7,85,-29,-27,-28,55,55,55,-42,-43,-44,-45,-46,-47,55,55,55,-54,-55,55,-30,-22,-25,-24,-23,-26,]),'LPAREN':([22,23,27,34,35,38,42,44,48,51,52,62,66,67,72,73,74,75,76,77,78,79,81,82,83,84,88,],[34,35,44,44,44,44,44,44,81,-50,-51,88,44,44,81,-42,-43,-44,-45,-46,-47,81,44,81,-54,-55,44,]),'IGUAL':([26,],[38,]),'NOT':([27,34,35,38,44,66,67,81,88,],[42,42,42,42,42,42,42,42,42,]),'PLUS':([27,34,35,38,42,44,47,49,50,51,52,53,54,55,66,67,72,73,74,75,76,77,78,79,80,81,82,83,84,88,94,97,],[51,51,51,51,51,51,51,-53,-57,-50,-51,-59,-60,-61,51,51,51,-42,-43,-44,-45,-46,-47,51,-56,51,51,-54,-55,51,-58,-52,]),'MINUS':([27,34,35,38,42,44,47,49,50,51,52,53,54,55,66,67,72,73,74,75,76,77,78,79,80,81,82,83,84,88,94,97,],[52,52,52,52,52,52,52,-53,-57,-50,-51,-59,-60,-61,52,52,52,-42,-43,-44,-45,-46,-47,52,-56,52,52,-54,-55,52,-58,-52,]),'NUMBER':([27,34,35,38,42,44,48,51,52,66,67,72,73,74,75,76,77,78,79,81,82,83,84,88,],[53,53,53,53,53,53,53,-50,-51,53,53,53,-42,-43,-44,-45,-46,-47,53,53,53,-54,-55,53,]),'FLOATNUMBER':([27,34,35,38,42,44,48,51,52,66,67,72,73,74,75,76,77,78,79,81,82,83,84,88,],[54,54,54,54,54,54,54,-50,-51,54,54,54,-42,-43,-44,-45,-46,-47,54,54,54,-54,-55,54,]),'PUNTOCOMA':([29,30,37,39,40,41,43,45,46,47,49,50,53,54,55,64,68,80,85,90,91,92,93,94,95,96,97,105,],[56,-12,63,65,-32,-34,-36,-39,-41,-49,-53,-57,-59,-60,-61,89,-35,-56,-11,-31,-33,-37,-38,-58,-40,-48,-52,108,]),'error':([29,30,85,],[57,-12,-11,]),'COMA':([30,],[58,]),'UNTIL':([36,59,],[62,-29,]),'OR':([40,41,43,45,46,47,49,50,53,54,55,68,80,91,92,93,94,95,96,97,],[66,-34,-36,-39,-41,-49,-53,-57,-59,-60,-61,-35,-56,-33,-37,-38,-58,-40,-48,-52,]),'RPAREN':([40,41,43,45,46,47,49,50,53,54,55,60,61,68,69,70,71,80,90,91,92,93,94,95,96,97,101,],[-32,-34,-36,-39,-41,-49,-53,-57,-59,-60,-61,86,87,-35,92,93,94,-56,-31,-33,-37,-38,-58,-40,-48,-52,105,]),'AND':([41,43,45,46,47,49,50,53,54,55,68,80,92,93,94,95,96,97,],[67,-36,-39,-41,-49,-53,-57,-59,-60,-61,-35,-56,-37,-38,-58,-40,-48,-52,]),'TRUE':([44,],[69,]),'FALSE':([44,],[70,]),'MENORIGUAL':([46,47,49,50,53,54,55,80,94,96,97,],[73,-49,-53,-57,-59,-60,-61,-56,-58,-48,-52,]),'MENOR':([46,47,49,50,53,54,55,80,94,96,97,],[74,-49,-53,-57,-59,-60,-61,-56,-58,-48,-52,]),'MAYOR':([46,47,49,50,53,54,55,80,94,96,97,],[75,-49,-53,-57,-59,-60,-61,-56,-58,-48,-52,]),'MAYORIGUAL':([46,47,49,50,53,54,55,80,94,96,97,],[76,-49,-53,-57,-59,-60,-61,-56,-58,-48,-52,]),'IGUALIGUAL':([46,47,49,50,53,54,55,80,94,96,97,],[77,-49,-53,-57,-59,-60,-61,-56,-58,-48,-52,]),'DIFERENTE':([46,47,49,50,53,54,55,80,94,96,97,],[78,-49,-53,-57,-59,-60,-61,-56,-58,-48,-52,]),'TIMES':([49,50,53,54,55,80,94,],[83,-57,-59,-60,-61,-56,-58,]),'DIVIDE':([49,50,53,54,55,80,94,],[84,-57,-59,-60,-61,-56,-58,]),'FI':([59,102,103,],[-29,106,107,]),'THEN':([86,87,],[98,100,]),'ELSE':([86,],[99,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'lista_declaracion':([3,6,],[4,28,]),'declaracion':([3,6,],[6,6,]),'tipo':([3,6,],[7,7,]),'lista_sentencias':([4,11,14,],[12,31,33,]),'sentencia':([4,11,14,],[14,14,14,]),'seleccion':([4,11,14,],[15,15,15,]),'iteracion':([4,11,14,],[16,16,16,]),'repeticion':([4,11,14,],[17,17,17,]),'sent_read':([4,11,14,],[18,18,18,]),'sent_write':([4,11,14,],[19,19,19,]),'bloque':([4,11,14,24,98,99,100,],[20,20,20,36,102,103,104,]),'asignacion':([4,11,14,],[21,21,21,]),'lista_id':([7,],[29,]),'b_expresion':([27,34,35,38,44,81,88,],[39,60,61,64,71,71,101,]),'b_term':([27,34,35,38,44,66,81,88,],[40,40,40,40,40,90,40,40,]),'not_factor':([27,34,35,38,44,66,67,81,88,],[41,41,41,41,41,41,91,41,41,]),'b_factor':([27,34,35,38,42,44,66,67,81,88,],[43,43,43,43,68,43,43,43,43,43,]),'relacion':([27,34,35,38,42,44,66,67,81,88,],[45,45,45,45,45,45,45,45,45,45,]),'expresion':([27,34,35,38,42,44,66,67,72,81,88,],[46,46,46,46,46,46,46,46,95,46,46,]),'termino':([27,34,35,38,42,44,66,67,72,79,81,88,],[47,47,47,47,47,47,47,47,47,96,47,47,]),'suma_Op':([27,34,35,38,42,44,47,66,67,72,79,81,82,88,],[48,48,48,48,48,48,79,48,48,48,48,48,48,48,]),'signoFactor':([27,34,35,38,42,44,66,67,72,79,81,82,88,],[49,49,49,49,49,49,49,49,49,49,49,97,49,]),'factor':([27,34,35,38,42,44,48,66,67,72,79,81,82,88,],[50,50,50,50,50,50,80,50,50,50,50,50,50,50,]),'rel_Op':([46,],[72,]),'multi_Op':([49,],[82,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM LLAVEABRE lista_declaracion lista_sentencias LLAVECIERRA','programa',5,'p_programa','MyParser.py',60),
  ('programa -> PROGRAM LLAVEABRE LLAVECIERRA','programa',3,'p_programa','MyParser.py',61),
  ('programa -> PROGRAM LLAVEABRE lista_declaracion LLAVECIERRA','programa',4,'p_programa','MyParser.py',62),
  ('lista_declaracion -> declaracion','lista_declaracion',1,'p_lista_declaracion','MyParser.py',68),
  ('lista_declaracion -> declaracion lista_declaracion','lista_declaracion',2,'p_lista_declaracion','MyParser.py',69),
  ('declaracion -> tipo lista_id PUNTOCOMA','declaracion',3,'p_declaracion','MyParser.py',74),
  ('declaracion -> tipo lista_id error','declaracion',3,'p_decl_err_pyc','MyParser.py',80),
  ('tipo -> INT','tipo',1,'p_tipo','MyParser.py',84),
  ('tipo -> FLOAT','tipo',1,'p_tipo','MyParser.py',85),
  ('tipo -> BOOL','tipo',1,'p_tipo','MyParser.py',86),
  ('lista_id -> IDENTIFIER COMA IDENTIFIER','lista_id',3,'p_lista_id','MyParser.py',91),
  ('lista_id -> IDENTIFIER','lista_id',1,'p_lista_id','MyParser.py',92),
  ('lista_sentencias -> sentencia','lista_sentencias',1,'p_lista_sentencias','MyParser.py',101),
  ('lista_sentencias -> sentencia lista_sentencias','lista_sentencias',2,'p_lista_sentencias','MyParser.py',102),
  ('sentencia -> seleccion','sentencia',1,'p_sentencia','MyParser.py',108),
  ('sentencia -> iteracion','sentencia',1,'p_sentencia','MyParser.py',109),
  ('sentencia -> repeticion','sentencia',1,'p_sentencia','MyParser.py',110),
  ('sentencia -> sent_read','sentencia',1,'p_sentencia','MyParser.py',111),
  ('sentencia -> sent_write','sentencia',1,'p_sentencia','MyParser.py',112),
  ('sentencia -> bloque','sentencia',1,'p_sentencia','MyParser.py',113),
  ('sentencia -> asignacion','sentencia',1,'p_sentencia','MyParser.py',114),
  ('seleccion -> IF LPAREN b_expresion RPAREN THEN bloque','seleccion',6,'p_seleccion','MyParser.py',119),
  ('seleccion -> IF LPAREN b_expresion RPAREN ELSE bloque FI','seleccion',7,'p_seleccion','MyParser.py',120),
  ('seleccion -> IF LPAREN b_expresion RPAREN THEN bloque FI','seleccion',7,'p_seleccion','MyParser.py',121),
  ('iteracion -> WHILE LPAREN b_expresion RPAREN THEN bloque','iteracion',6,'p_iteracion','MyParser.py',125),
  ('repeticion -> DO bloque UNTIL LPAREN b_expresion RPAREN PUNTOCOMA','repeticion',7,'p_repeticion','MyParser.py',129),
  ('sent_read -> READ IDENTIFIER PUNTOCOMA','sent_read',3,'p_sent_read','MyParser.py',133),
  ('sent_write -> WRITE b_expresion PUNTOCOMA','sent_write',3,'p_sent_write','MyParser.py',137),
  ('bloque -> LLAVEABRE lista_sentencias LLAVECIERRA','bloque',3,'p_bloque','MyParser.py',141),
  ('asignacion -> IDENTIFIER IGUAL b_expresion PUNTOCOMA','asignacion',4,'p_asignacion','MyParser.py',146),
  ('b_expresion -> b_term OR b_term','b_expresion',3,'p_b_expresion','MyParser.py',152),
  ('b_expresion -> b_term','b_expresion',1,'p_b_expresion','MyParser.py',153),
  ('b_term -> not_factor AND not_factor','b_term',3,'p_b_term','MyParser.py',161),
  ('b_term -> not_factor','b_term',1,'p_b_term','MyParser.py',162),
  ('not_factor -> NOT b_factor','not_factor',2,'p_not_factor','MyParser.py',169),
  ('not_factor -> b_factor','not_factor',1,'p_not_factor','MyParser.py',170),
  ('b_factor -> LPAREN TRUE RPAREN','b_factor',3,'p_b_factor','MyParser.py',177),
  ('b_factor -> LPAREN FALSE RPAREN','b_factor',3,'p_b_factor','MyParser.py',178),
  ('b_factor -> relacion','b_factor',1,'p_b_factor','MyParser.py',179),
  ('relacion -> expresion rel_Op expresion','relacion',3,'p_relacion','MyParser.py',183),
  ('relacion -> expresion','relacion',1,'p_relacion','MyParser.py',184),
  ('rel_Op -> MENORIGUAL','rel_Op',1,'p_rel_Op','MyParser.py',188),
  ('rel_Op -> MENOR','rel_Op',1,'p_rel_Op','MyParser.py',189),
  ('rel_Op -> MAYOR','rel_Op',1,'p_rel_Op','MyParser.py',190),
  ('rel_Op -> MAYORIGUAL','rel_Op',1,'p_rel_Op','MyParser.py',191),
  ('rel_Op -> IGUALIGUAL','rel_Op',1,'p_rel_Op','MyParser.py',192),
  ('rel_Op -> DIFERENTE','rel_Op',1,'p_rel_Op','MyParser.py',193),
  ('expresion -> termino suma_Op termino','expresion',3,'p_expresion','MyParser.py',196),
  ('expresion -> termino','expresion',1,'p_expresion','MyParser.py',197),
  ('suma_Op -> PLUS','suma_Op',1,'p_suma_Op','MyParser.py',205),
  ('suma_Op -> MINUS','suma_Op',1,'p_suma_Op','MyParser.py',206),
  ('termino -> signoFactor multi_Op signoFactor','termino',3,'p_termino','MyParser.py',211),
  ('termino -> signoFactor','termino',1,'p_termino','MyParser.py',212),
  ('multi_Op -> TIMES','multi_Op',1,'p_multi_Op','MyParser.py',220),
  ('multi_Op -> DIVIDE','multi_Op',1,'p_multi_Op','MyParser.py',221),
  ('signoFactor -> suma_Op factor','signoFactor',2,'p_signoFactor','MyParser.py',225),
  ('signoFactor -> factor','signoFactor',1,'p_signoFactor','MyParser.py',226),
  ('factor -> LPAREN b_expresion RPAREN','factor',3,'p_factor','MyParser.py',233),
  ('factor -> NUMBER','factor',1,'p_factor','MyParser.py',234),
  ('factor -> FLOATNUMBER','factor',1,'p_factor','MyParser.py',235),
  ('factor -> IDENTIFIER','factor',1,'p_factor','MyParser.py',236),
]
